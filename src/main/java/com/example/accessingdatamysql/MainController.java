package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@Controller
@RequestMapping("/")
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CityRepository cityRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewCity (@RequestParam String name, @RequestParam String countryCode, @RequestParam String district, @RequestParam int population) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        City n = new City();
        n.setName(name);
        n.setCountrycode(countryCode);
        n.setDistrict(district);
        n.setPopulation(population);
        cityRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<City> getAllCities() {
        // This returns a JSON or XML with the users
        return cityRepository.findAll();
    }

    @GetMapping(path="/{id}")
    public @ResponseBody Optional<City> getCity(@PathVariable int id) {
        // This returns a JSON or XML with the users
        return cityRepository.findById(id);
    }

    @GetMapping(path="/country/{countryCode}")
    public @ResponseBody Iterable<City> getCityByCountryCode(@PathVariable String countryCode) {
        // This returns a JSON or XML with the users
        return cityRepository.findByCountrycode(countryCode);
    }

}
